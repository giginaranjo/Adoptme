components: 

  responses:
    GenericErrors:
      InternalServerError:
        description: Unexpected server error.
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message 
                message: 
                  type: string
                  description: Detailed error message 
      Notfound:
        description:  The requested resource was not found.
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message 


  schemas:
    Pet:
      type: object
      properties:
        _id:
          type: string
          format: mongoid
          description: Pet id generated by MongoDB
        name:
          type: string
          description: Pet name
        specie:
          type: string
          description: Pet specie
        birthDate:
          type: string
          format: date-time
          description: Pet's date of birth (ISO 8601 format)
        adopted: 
          type: boolean
          description: Indicates if the pet was adopted
        owner:  
          type: string
          format: mongoid
          description: Owner id generated by MongoDB
        image:  
          type: string
          description: Pet image url
        createdAt:  
          type: string
          format: date-time
          description: Pet creation date in MongoDB (ISO 8601 format)
        updatedAt:  
          type: string
          format: date-time
          description: Pet update date in MongoDB (ISO 8601 format)
        __v:  
          type: integer
          description: Version key used by MongoDB
    User:
      type: object
      properties:
        _id:
          type: string
          format: mongoid
          description: User id generated by MongoDB
        first_name:
          type: string
          description: User's first name
        last_name:
          type: string
          description: User's last name
        email:
          type: string
          format: email
          description: User email
        password: 
          type: string
          description: User password
        role:
          type: string
          enum: [user, admin]
          default: user
          description: User role (user or admin, default user)
        pets:
          type: array
          description: List of pets adopted by the user.
          items:
            type: object
            properties:
              _id:
                type: string
                format: mongoid
                description: Pet id generated by MongoDB
        __v:  
          type: integer
          description: Version key used by MongoDB
    
    
  requestBody:
    CreateOrUpdatePet:
      type: object
      properties:
        name:
          type: string
          description: Pet name
        specie:
          type: string
          description: Pet specie
        birthDate:
          type: string
          format: date-time
          description: Pet's date of birth (ISO 8601 format)
    CreateOrUpdateUser:
      type: object
      properties:
        first_name:
          type: string
          description: User's first name
        last_name:
          type: string
          description: User's last name
        email:
          type: string
          format: email
          description: User email
        password: 
          type: string
          description: User password
   